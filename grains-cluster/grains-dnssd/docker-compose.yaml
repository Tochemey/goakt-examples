services:
  accounts:
    image: "accounts-grains:dev"
    deploy:
      mode: replicated
      replicas: 3
    command:
      - run
    ports:
      - "8000-8020:50051"
      - "9092"
    environment:
      SERVICE_NAME: accounts
      SYSTEM_NAME: AccountsSystem
      PORT: 50051
      GOSSIP_PORT: 3322
      PEERS_PORT: 3320
      REMOTING_PORT: 50052
      TRACE_URL: "collector:4317"
      DB_USER: "postgres"
      DB_PASSWORD: "changeme"
      DB_HOST: "db"
      DB_PORT: 5432
      DB_NAME: "postgres"
      DB_SCHEMA: "sample"

  db:
    image: postgres:11
    restart: always
    volumes:
      - ./db/migrations:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"


  tracer:
    image: jaegertracing/all-in-one:1.25
    profiles:
      - observability
    container_name: tracer
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      LOG_LEVEL: INFO
    ports:
      - "16686:16686" # frontend
      - "14268"
      - "5775"

  prometheus:
    image: prom/prometheus
    profiles:
      - observability
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"

  collector:
    image: otel/opentelemetry-collector-contrib:0.52.0
    profiles:
      - observability
    command: ["--config=/etc/otel/config.yaml", ""]
    depends_on:
      - tracer
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "13133:13133" # health_check extension
      - "14250:14250"
      - "14268:14268"
      - "55681:55681" # Legacy OTLP/HTTP Port
      - "55680:55679" # zpages extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "9411" # Zipkin receiver
    volumes:
      - ./otel-collector.yaml:/etc/otel/config.yaml